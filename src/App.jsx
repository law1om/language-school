import { Swiper, SwiperSlide } from "swiper/react";
import { Navigation, Pagination, Autoplay } from "swiper/modules";
import "swiper/css";
import "swiper/css/navigation";
import "swiper/css/pagination";
import './App.css'
import { useState, useEffect, useRef} from "react";

const Header = () => {
    const scrollToSection = (e) => {
        e.preventDefault();
        const targetId = e.target.getAttribute('data-link');
        const targetElement = document.getElementById(targetId);
        if (targetElement) {
            targetElement.scrollIntoView({ behavior: 'smooth' });
        }
    };

    return (
        <header className="header">
            <div className="container">
                <div className="logo">
                    <img src="/logo.svg" alt="logo" />
                </div>
                <nav className="menu">
                    <ul className="menu_list">
                        <li className="menu_item">
                            <a href="#programs" data-link="programs" onClick={scrollToSection}>–ü—Ä–æ–≥—Ä–∞–º–º—ã</a>
                        </li>
                        <li className="menu_item">
                            <a href="#about-us" data-link="about-us" onClick={scrollToSection}>–û –Ω–∞—Å</a>
                        </li>
                        <li className="menu_item">
                            <a href="#sign-up" data-link="sign-up" onClick={scrollToSection}>–ó–∞–ø–∏—Å–∞—Ç—å—Å—è</a>
                        </li>
                    </ul>
                </nav>
            </div>
        </header>
    );
};

const MainContent = () => {
    useEffect(() => {
        const button = document.getElementById("main-action-button");
        if (button) {
            button.addEventListener("click", () => alert("–ó–∞–∫–∞–∑ –æ—Ñ–æ—Ä–º–ª–µ–Ω!"));
        }
    }, []);

    return (
        <section className="main_content">
            <div className="container">
                <img src="/line1.svg" alt="Line" className="line1" />
                <div className="main-info">
                    <h1 className="main-title">
                        –û–≤–ª–∞–¥–µ–π—Ç–µ –ª—é–±—ã–º —è–∑—ã–∫–æ–º.</h1>
                    <p className="main-text">
                        –ü–æ–≥—Ä—É–∑–∏—Ç–µ—Å—å –≤ –º–∏—Ä —è–∑—ã–∫–æ–≤ —Å King's Course! –ù–∞—à–∏ –∫—É—Ä—Å—ã –ø–æ–º–æ–≥—É—Ç –≤–∞–º –æ–≤–ª–∞–¥–µ—Ç—å –∞–Ω–≥–ª–∏–π—Å–∫–∏–º –∏ –¥—Ä—É–≥–∏–º–∏ —è–∑—ã–∫–∞–º–∏ –ª–µ–≥–∫–æ, —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ –∏ —Å —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ–º.
                    </p>
                </div>
                <div className="main-action">
                    <button className="button" id="main-action-button">–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å!</button>
                </div>
                <img src="/foreign-language.svg" alt="foreign-language" className="main-image" />
            </div>
        </section>
    );
};

const courses = [
    {
        id: 1,
        image: "/eng.png",
        title: "–ê–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫ üá¨üáß",
        description: "–ü–æ–≥—Ä—É–∑–∏—Å—å –≤ –º–∏—Ä –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ!",
        features: [
            "–ö—É—Ä—Å—ã –¥–ª—è –≤—Å–µ—Ö —É—Ä–æ–≤–Ω–µ–π (A1‚ÄìC2)",
            "–†–∞–∑–≥–æ–≤–æ—Ä–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞ —Å –Ω–æ—Å–∏—Ç–µ–ª—è–º–∏",
            "–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ —ç–∫–∑–∞–º–µ–Ω–∞–º (IELTS, TOEFL)"
        ]
    },
    {
        id: 2,
        image: "/ger 1.svg",
        title: "–ù–µ–º–µ—Ü–∫–∏–π —è–∑—ã–∫ üá©üá™",
        description: "–û—Ç–∫—Ä–æ–π –¥–ª—è —Å–µ–±—è —è–∑—ã–∫ –ì—ë—Ç–µ!",
        features: [
            "–ì—Ä–∞–º–º–∞—Ç–∏–∫–∞ –∏ –ø—Ä–æ–∏–∑–Ω–æ—à–µ–Ω–∏–µ —Å –Ω—É–ª—è",
            "–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ Goethe-Zertifikat",
            "–ë–∏–∑–Ω–µ—Å-–Ω–µ–º–µ—Ü–∫–∏–π –∏ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è"
        ]
    },
    {
        id: 3,
        image: "/fr.svg",
        title: "–§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π —è–∑—ã–∫ üá´üá∑",
        description: "–ì–æ–≤–æ—Ä–∏, –∫–∞–∫ –ø–∞—Ä–∏–∂–∞–Ω–∏–Ω!",
        features: [
            "–§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π —Å –Ω—É–ª—è –¥–æ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–≥–æ —É—Ä–æ–≤–Ω—è",
            "–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ DELF/DALF",
            "–†–∞–∑–≥–æ–≤–æ—Ä–Ω—ã–µ –∫–ª—É–±—ã –∏ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ —É—Ä–æ–∫–∏"
        ]
    },
    {
        id: 4,
        image: "/es 1.svg",
        title: "–ò—Å–ø–∞–Ω—Å–∫–∏–π —è–∑—ã–∫ üá™üá∏",
        description: "–ü–æ—á—É–≤—Å—Ç–≤—É–π —Å—Ç—Ä–∞—Å—Ç—å –ò—Å–ø–∞–Ω–∏–∏!",
        features: [
            "–õ–∞—Ç–∏–Ω—Å–∫–∞—è –ê–º–µ—Ä–∏–∫–∞ vs –ò—Å–ø–∞–Ω–∏—è",
            "–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ DELE",
            "–°–ª–µ–Ω–≥ –∏ –∫—É–ª—å—Ç—É—Ä–∞ –∏—Å–ø–∞–Ω–æ—è–∑—ã—á–Ω—ã—Ö —Å—Ç—Ä–∞–Ω"
        ]
    },
    {
        id: 5,
        image: "/italy.png",
        title: "–ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π —è–∑—ã–∫ üáÆüáπ",
        description: "–ì–æ–≤–æ—Ä–∏, –∫–∞–∫ –≤ –ò—Ç–∞–ª–∏–∏!",
        features: [
            "–ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π –¥–ª—è –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–π",
            "–ú—É–∑—ã–∫–∞ –∏ –∫–∏–Ω–æ –Ω–∞ –∏—Ç–∞–ª—å—è–Ω—Å–∫–æ–º",
            "–ö—É–ª—å—Ç—É—Ä–∞ –∏ —Ç—Ä–∞–¥–∏—Ü–∏–∏ –ò—Ç–∞–ª–∏–∏"
        ]
    }
];


const Courses = () => {
    return (
        <section className="courses" id="programs">
            <img src="/line2.svg" alt="Line" className="line2"/>
            <div className="common-title">–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É</div>
            <div className="container">

                <Swiper
                    modules={[Navigation, Pagination, Autoplay]}
                    spaceBetween={30}
                    slidesPerView={3}
                    loop={true}
                    autoplay={{delay: 2500, disableOnInteraction: false}}
                    navigation
                    pagination={{clickable: true}}
                >
                    {courses.map((course) => (
                        <SwiperSlide key={course.id}>
                            <div className="course-card">
                                <div className="course-image">
                                    <img src={course.image} alt={course.title}/>
                                </div>
                                <div className="course-details">
                                    <h3 className="course-title">{course.title}</h3>
                                    <p className="course-description">{course.description}</p>
                                    <ul className="course-features">
                                        {course.features.map((feature, index) => (
                                            <li key={index}>üî∑ {feature}</li>
                                        ))}
                                    </ul>
                                    <button className="button">–£–∑–Ω–∞—Ç—å</button>
                                </div>
                            </div>
                        </SwiperSlide>
                    ))}
                </Swiper>
            </div>
        </section>
    );
};


const advantages = [
    {id: 1, title: "–û–ø—ã—Ç–Ω—ã–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏", icon: "üë®‚Äçüè´" },
    { id: 2, title: "–ñ–∏–≤–æ–µ –æ–±—â–µ–Ω–∏–µ", icon: "üí¨" },
    { id: 3, title: "–ú–µ—Ç–æ–¥–∏–∫–∏ –º–∏—Ä–æ–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è", icon: "üß†" },
    { id: 4, title: "–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ —ç–∫–∑–∞–º–µ–Ω–∞–º", icon: "üìù" },

];

const Advantages = () => {
    const sectionRef = useRef(null);

    useEffect(() => {
        const observer = new IntersectionObserver(
            (entries) => {
                entries.forEach((entry) => {
                    if (entry.isIntersecting) {
                        entry.target.classList.add("show");
                    }
                });
            },
            { threshold: 0.3 }
        );

        const cards = sectionRef.current.querySelectorAll(".card");
        cards.forEach((card) => observer.observe(card));

        return () => observer.disconnect();
    }, []);

    return (

        <section className="advantages" id="about-us" ref={sectionRef}>
            <h2 className="common-title">–ù–∞—à–∏ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞</h2>
            <p className="description">
                –ù–∞—à–∏ –∫—É—Ä—Å—ã ‚Äî —ç—Ç–æ –∏–¥–µ–∞–ª—å–Ω–æ–µ —Å–æ—á–µ—Ç–∞–Ω–∏–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –∑–Ω–∞–Ω–∏–π, –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–ø—ã—Ç–∞ –∏ —É–¥–æ–±–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞ –æ–±—É—á–µ–Ω–∏—è. –ú—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã, –ø–æ–¥–¥–µ—Ä–∂–∫—É —ç–∫—Å–ø–µ—Ä—Ç–æ–≤ –∏ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å.
            </p>
            <div className="cards">
                {advantages.map((adv) => (
                    <div key={adv.id} className="card hidden">
                        <span className="icon">{adv.icon}</span>
                        <p>{adv.title}</p>
                    </div>
                ))}
            </div>

        </section>

    );
};



const faqs = [
    { question: "–ö–∞–∫–∏–µ —è–∑—ã–∫–∏ –º–æ–∂–Ω–æ –∏–∑—É—á–∞—Ç—å?", answer: "–£ –Ω–∞—Å –µ—Å—Ç—å –∫—É—Ä—Å—ã –ø–æ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º—É, –Ω–µ–º–µ—Ü–∫–æ–º—É, —Ñ—Ä–∞–Ω—Ü—É–∑—Å–∫–æ–º—É, –∏—Å–ø–∞–Ω—Å–∫–æ–º—É –∏ –∏—Ç–∞–ª—å—è–Ω—Å–∫–æ–º—É —è–∑—ã–∫–∞–º." },
    { question: "–ö–∞–∫ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫—É—Ä—Å?", answer: "–í—ã –º–æ–∂–µ—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ —Å–∞–π—Ç–µ, –∏ –Ω–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π." },
    { question: "–ï—Å—Ç—å –ª–∏ –ø—Ä–æ–±–Ω—ã–π —É—Ä–æ–∫?", answer: "–î–∞, —É –Ω–∞—Å –µ—Å—Ç—å –ø—Ä–æ–±–Ω—ã–µ —É—Ä–æ–∫–∏, –Ω–∞ –∫–æ—Ç–æ—Ä—ã—Ö –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–º –∏ –º–µ—Ç–æ–¥–∏–∫–æ–π –æ–±—É—á–µ–Ω–∏—è." },
    { question: "–ö–∞–∫ –ø—Ä–æ—Ö–æ–¥–∏—Ç –æ–±—É—á–µ–Ω–∏–µ?", answer: "–û–±—É—á–µ–Ω–∏–µ –ø—Ä–æ—Ö–æ–¥–∏—Ç –æ–Ω–ª–∞–π–Ω –∏–ª–∏ –æ—Ñ–ª–∞–π–Ω, –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤–∞—à–µ–≥–æ –≤—ã–±–æ—Ä–∞. –í–∫–ª—é—á–∞–µ—Ç –≤ —Å–µ–±—è –ª–µ–∫—Ü–∏–∏, –ø—Ä–∞–∫—Ç–∏–∫—É –∏ —Ä–∞–∑–≥–æ–≤–æ—Ä–Ω—ã–µ –∫–ª—É–±—ã." },
];

const FAQ = () => {
    const [openIndex, setOpenIndex] = useState(null);

    const toggleFAQ = (index) => {
        setOpenIndex(openIndex === index ? null : index);
    };

    return (
        <section className="faq">
            <h2 className="common-title">–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã</h2>
            <div className="container">
                {faqs.map((faq, index) => (
                    <div key={index} className={`faq-item ${openIndex === index ? "open" : ""}`}>
                        <button className="faq-question" onClick={() => toggleFAQ(index)}>
                            {faq.question}
                            <span className="arrow">{openIndex === index ? "‚ñ≤" : "‚ñº"}</span>
                        </button>
                        <div className="faq-answer" style={{ maxHeight: openIndex === index ? "100px" : "0" }}>
                            <p>{faq.answer}</p>
                        </div>
                    </div>
                ))}
            </div>
        </section>
    );
};



const OrderForm = () => {
    return (
        <section className="order" id="sign-up">
            <img src="/line3.svg" alt="Line" className="line3" />
            <div className="container">
                <div className="common-title">–ó–∞–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫—É—Ä—Å</div>
                <div className="order-block">
                    <div className="order-form">
                        <div className="order-form-text">
                            –ù–∞—á–Ω–∏—Ç–µ –∏–∑—É—á–µ–Ω–∏–µ —è–∑—ã–∫–∞ —É–∂–µ —Å–µ–≥–æ–¥–Ω—è! –ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É, –∏ –Ω–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –¥–ª—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏.
                        </div>
                        <div className="order-form-inputs">
                            <input type="text" placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫" id="course" />
                            <input type="text" placeholder="–í–∞—à–µ –∏–º—è" id="name" />
                            <input type="text" placeholder="–í–∞—à —Ç–µ–ª–µ—Ñ–æ–Ω" id="phone" />
                            <button className="button violet-button" id="order-action">–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É</button>
                        </div>
                    </div>
                    <div className="order-block-image">
                        <img src="/books.svg" alt="Languages" className="order-image" />
                    </div>
                </div>
            </div>
        </section>
    );
};

const Footer = () => {
    const scrollToTop = () => {
        window.scrollTo({
            top: 0,
            behavior: 'smooth'
        });
    };
    
    return (
        <footer className="footer">
            <div className="container">
                <div className="footer-content">
                    <div className="footer-text">
                        KINGS COURSE
                    </div>
                    <button className="scroll-top" onClick={scrollToTop} aria-label="–ü—Ä–æ–∫—Ä—É—Ç–∏—Ç—å –Ω–∞–≤–µ—Ä—Ö">
                        ‚Üë
                    </button>
                </div>
                <p className="rights">¬© 2025 ¬´–í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã¬ª</p>
            </div>
        </footer>
    );
};


export {Header, MainContent, Courses, Advantages, FAQ, OrderForm, Footer};
